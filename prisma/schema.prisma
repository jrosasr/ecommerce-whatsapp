datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  client // client
  user // usuario standard
  advisor // advisor
  assistant // assistant
  admin // admin
  superadmin // superadmin
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          Role      @default(admin)

  accounts Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String   @unique
  token      String
  expires    DateTime

  @@id([identifier])
}

////////////////////////// LunaTV //////////////////////

model PromotionalCode {
  id            String   @id @default(cuid())
  code          String   @unique
  description   String
  startDate     DateTime
  endDate       DateTime
  uses          Int      @default(0)
  maxUses       Int?
  discountType  String // 'percentage' or 'fixed'
  discountValue Float
  isActive      Boolean  @default(true)
  isNew         Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model PromotionalCodeUsage {
  id     String   @id @default(cuid())
  code   String
  usedAt DateTime @default(now())
}
